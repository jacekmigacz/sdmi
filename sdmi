#!/bin/sh

set -e
set -x

usage() {
    printf "Usage: %s: [-i ghID|-i bzID]\n" $0
    exit 2
}

id=
while getopts i: name
do
    case $name in
        i) id="$OPTARG";;
        ?) usage;;
    esac
done
prefix=$(echo $id | awk '{print substr($0,1,2)}')
[ $prefix != "bz" -a $prefix != "gh" ] && usage

echo "helper" >> ./.git/info/exclude

cat <<EOF > ./helper
alias a='sudo machinectl shell $id'
alias b='sudo mkosi -i -f'
alias bb='sudo mkosi -i -ff'
alias q='qemu-kvm -m 512 -smp 2 -bios /usr/share/edk2/ovmf/OVMF_CODE.fd -drive format=raw,file=$(find mkosi.output -name image.raw) -nographic'
alias r='sudo systemd-nspawn -bni $(find mkosi.output -name image.raw) --machine=$id'
alias t='gtags -v'
EOF

optfile=
if [ -e ./mkosi.default ]; then
    optfile=./mkosi.default
elif [ -e ./mkosi.default.d/fedora/10-mkosi.fedora ]; then
    optfile=./mkosi.default.d/fedora/10-mkosi.fedora
elif [ -e ./mkosi.conf.d/fedora/10-mkosi.fedora ]; then
    optfile=./mkosi.conf.d/fedora/10-mkosi.fedora
elif [ -e ./mkosi.conf.d/fedora/10-fedora.conf ]; then
    optfile=./mkosi.conf.d/fedora/10-fedora.conf
else
    exit 1
fi
git restore $optfile
pkgs="ldns-utils bind-utils net-tools tcpdump screen iputils passwd gdb-gdbserver traceroute unbound-libs"
pkgs_2=
for pkg in $pkgs; do
    pkgs_2="${pkgs_2}\ \ \ \ \ \ \ \ $pkg\n"
done
sed -i "/^Packages=/a $pkgs_2" $optfile

if git ls-files --error-unmatch ./mkosi.postinst 2>/dev/null; then
    git restore ./mkosi.postinst
else
    echo -n "" > ./mkosi.postinst
    chmod +x ./mkosi.postinst
fi
cat <<EOF >> ./mkosi.postinst

if [[ "\$1" == final ]]; then
    systemctl enable systemd-resolved
fi
EOF

mkdir -p ./mkosi.extra/etc/systemd/system/systemd-resolved.service.d
cat <<EOF > ./mkosi.extra/etc/systemd/system/systemd-resolved.service.d/override.conf
[Service]
Environment=SYSTEMD_LOG_LEVEL=debug
WatchdogSec=0
EOF

mkdir -p ./mkosi.extra/usr/lib/systemd/network
cat <<EOF > ./mkosi.extra/usr/lib/systemd/network/80-container-host0.network
[Match]
Virtualization=container
Name=host0

[Network]
Address=192.168.254.2/30
Gateway=192.168.254.1
EOF

sudo touch /lib/systemd/network/79-$id-ve.network
sudo chown $USER: /lib/systemd/network/79-$id-ve.network
cat <<EOF > /lib/systemd/network/79-$id-ve.network
[Match]
Name=ve-$id
Driver=veth

[Network]
Address=192.168.254.1/30
EOF
sudo systemctl daemon-reload
sudo systemctl restart systemd-networkd
